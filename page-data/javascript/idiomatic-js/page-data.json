{"componentChunkName":"component---src-templates-docs-js","path":"/javascript/idiomatic-js","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"E-Learning | Reativa","docsLocation":""}},"mdx":{"id":"786e50f3-505c-532c-856e-d978effab9df","fields":{"id":"786e50f3-505c-532c-856e-d978effab9df","title":"Idiomatic JS","slug":"/javascript/idiomatic-js"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Idiomatic JS\",\n  \"metaTitle\": \"Princípios para Escrever JavaScript de forma Consistente e Idiomática\",\n  \"metaDescription\": \"Princípios para Escrever JavaScript de forma Consistente e Idiomática\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Princ\\xEDpios para Escrever JavaScript de forma Consistente e Idiom\\xE1tica\"), mdx(\"h2\", null, \"Refer\\xEAncias Originais\"), mdx(\"p\", null, \"O artigo original utiliza a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/rwaldron/idiomatic.js/blob/master/cc-license.md\"\n  }), \"licen\\xE7a CC 3.0\"), \" que \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://creativecommons.org/licenses/by/3.0/deed.en_US\"\n  }), \"permite copiar, modificar e restribuir o material\"), \".\"), mdx(\"p\", null, \"Acesse os artigos originais aqui:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/rwldrn/idiomatic.js/\"\n  }), \"Artigo Original\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/rwldrn/idiomatic.js/tree/master/translations/pt_BR\"\n  }), \"Tradu\\xE7\\xE3o PT-Br\"))), mdx(\"p\", null, \"Boa leitura!\"), mdx(\"h2\", null, \"Todo c\\xF3digo em qualquer aplica\\xE7\\xE3o deve parecer como se tivesse sido escrito por uma \\xFAnica pessoa, independentemente de quantas pessoas tenham contribu\\xEDdo.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"A lista a seguir descreve as pr\\xE1ticas que eu uso em todo c\\xF3digo onde sou o autor original; contribui\\xE7\\xF5es em projetos que eu criei devem seguir essas mesmas orienta\\xE7\\xF5es.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Eu n\\xE3o tenho a inten\\xE7\\xE3o de impor minhas prefer\\xEAncias por estilos nos c\\xF3digos ou projetos de outras pessoas; se eles seguem um estilo em comum, isso deve ser respeitado.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\\"Argumentos al\\xE9m do estilo s\\xE3o in\\xFAteis. Deve haver um guia de estilo, e voc\\xEA deve segui-lo\\\"\\n\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Rebecca\"), \" \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Murphey\"))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\\"Parte de ser um bom gestor de um projeto bem sucedido \\xE9 perceber que escrever c\\xF3digo para si mesmo \\xE9 uma m\\xE1 ideia\\u2122. Se milhares de pessoas est\\xE3o usando o seu c\\xF3digo, escreva-o com m\\xE1xima clareza, n\\xE3o sob a sua prefer\\xEAncia pessoal de como ser esperto com a especifica\\xE7\\xE3o.\\\"\\n\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Idan\"), \" \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Gazit\"))), mdx(\"h2\", null, \"Conte\\xFAdo importante e n\\xE3o idiom\\xE1tico:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Qualidade de c\\xF3digo: ferramentas, recursos e refer\\xEAncias\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://docs.codehaus.org/display/SONAR/JavaScript+Plugin\"\n  }), \"JavaScript Plugin\"), \" for \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.sonarsource.org/\"\n  }), \"Sonar\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/jsoverson/plato\"\n  }), \"Plato\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://jsperf.com/\"\n  }), \"jsPerf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://jsfiddle.net/\"\n  }), \"jsFiddle\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://jsbin.com/\"\n  }), \"jsbin\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://javascriptlint.com/\"\n  }), \"JavaScript Lint (JSL)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://jshint.com/\"\n  }), \"jshint\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://jslint.org/\"\n  }), \"jslint\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://editorconfig.org/\"\n  }), \"Editorconfig\"))), mdx(\"h2\", null, \"Fique ligado\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://es5.github.com/\"\n  }), \"Annotated ECMAScript 5.1\"), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://ecma-international.org/ecma-262/5.1/\"\n  }), \"EcmaScript Language Specification, 5.1 Edition\"))), mdx(\"p\", null, \"A lista a seguir deve ser considerada: 1) incompleta; e 2) \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"LEITURA OBRIGAT\\xD3RIA\"), \". Eu n\\xE3o concordo sempre com os estilos escritos pelos autores abaixo, mas uma coisa \\xE9 certa: eles s\\xE3o consistentes. Al\\xE9m disso, esses s\\xE3o autoridades na linguagem.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://rmurphey.com/blog/2012/04/12/a-baseline-for-front-end-developers/\"\n  }), \"Baseline For Front End Developers\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://eloquentjavascript.net/\"\n  }), \"Eloquent JavaScript\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://javascriptweblog.wordpress.com/\"\n  }), \"JavaScript, JavaScript\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://rmurphey.com/\"\n  }), \"Adventures in JavaScript Development\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://perfectionkills.com/\"\n  }), \"Perfection Kills\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.crockford.com\"\n  }), \"Douglas Crockford's Wrrrld Wide Web\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/rmurphey/js-assessment\"\n  }), \"JS Assessment\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://anton.kovalyov.net/slides/gothamjs/\"\n  }), \"Leveraging Code Quality Tools (em pt_BR: Tirando Proveito de Ferramentas de Qualidade de C\\xF3digo) por Anton Kovalyov\"))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Processos de build e deploy\")), mdx(\"p\", null, \"Projetos devem sempre tentar incluir algumas formas gen\\xE9ricas nas quais o c\\xF3digo podem ser checados com ferramentas de lint, testados e compactados no preparo para uso em produ\\xE7\\xE3o. Para essa tarefa, o \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/cowboy/grunt\"\n  }), \"grunt\"), \" pelo Ben Alman \\xE9 a melhor op\\xE7\\xE3o, al\\xE9m de ter substitu\\xEDdo oficialmente o diret\\xF3rio \\\"kits/\\\" neste reposit\\xF3rio.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Ambiente de teste\")), mdx(\"p\", null, \"Projetos \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"devem\"), \" incluir alguma forma de teste unit\\xE1rio, de refer\\xEAncia, de implementa\\xE7\\xE3o ou funcional. Demonstra\\xE7\\xF5es de casos de uso N\\xC3O SE QUALIFICAM como \\\"testes\\\". A lista a seguir cont\\xE9m frameworks de testes, nenhuma delas \\xE9 considerada melhor que as demais.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://github.com/jquery/qunit\"\n  }), \"QUnit\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/pivotal/jasmine\"\n  }), \"Jasmine\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/cloudhead/vows\"\n  }), \"Vows\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/visionmedia/mocha\"\n  }), \"Mocha\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://hirojs.com/\"\n  }), \"Hiro\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://code.google.com/p/js-test-driver/\"\n  }), \"JsTestDriver\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://busterjs.org/\"\n  }), \"Buster.js\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://sinonjs.org/\"\n  }), \"Sinon.js\"))), mdx(\"h2\", null, \"\\xCDndice\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#whitespace\"\n  }), \"Espa\\xE7o em branco\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#spacing\"\n  }), \"Sintaxe bonita\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#type\"\n  }), \"Checagem de escrita (cortesia das Recomenda\\xE7\\xF5es de Estilo do N\\xFAcleo do jQuery)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#cond\"\n  }), \"Avalia\\xE7\\xE3o condicional\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#practical\"\n  }), \"Estilo pr\\xE1tico\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#naming\"\n  }), \"Nomenclatura\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#misc\"\n  }), \"Miscel\\xE2neas\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#native\"\n  }), \"Objetos nativos e hospedados\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#comments\"\n  }), \"Coment\\xE1rios\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#language\"\n  }), \"C\\xF3digo em apenas um idioma\"))), mdx(\"hr\", null), mdx(\"h2\", null, \"Pref\\xE1cio\"), mdx(\"p\", null, \"As se\\xE7\\xF5es a seguir descrevem um guia de estilos razo\\xE1vel para desenvolvimento de JavaScript moderno e n\\xE3o pretendem ser obrigat\\xF3rias. A conclus\\xE3o mais importante \\xE9 a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"lei da consist\\xEAncia de estilo de c\\xF3digo\"), \". O que for escolhido como estilo para o seu projeto dever\\xE1 ser considerado lei. Fa\\xE7a um link para este documento como uma regra do seu projeto sobre comprometimento de consist\\xEAncia, legibilidade e manuten\\xE7\\xE3o de estilo de c\\xF3digo.\"), mdx(\"h2\", null, \"Manifesto de estilo idiom\\xE1tico\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    name: \"whitespace\"\n  }, \"Espa\\xE7o em branco\"))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nunca misture espa\\xE7os e tabs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Quando come\\xE7ar um projeto, antes de escrever qualquer c\\xF3digo, escolha entre indenta\\xE7\\xE3o suave (espa\\xE7os) ou tabula\\xE7\\xE3o real (tabs), considere isso como \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"lei\"), \".\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pela legibilidade, eu sempre recomendo que configure o tamanho de indenta\\xE7\\xE3o de seu editor para dois caracteres - isso significa dois espa\\xE7os ou dois espa\\xE7os representando um tab real.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Se o seu editor suportar, sempre trabalhe com a configura\\xE7\\xE3o de \\\"mostrar caracteres invis\\xEDveis\\\" ligada. Os benef\\xEDcios desta pr\\xE1tica s\\xE3o:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"fortalecer a consist\\xEAncia;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"eliminar espa\\xE7o em branco ao final da linha;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"eliminar espa\\xE7os em uma linha em branco;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"commits e diffs mais leg\\xEDveis.\")))), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    name: \"spacing\"\n  }, \"Sintaxe bonita\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"A. Par\\xEAnteses, chaves e quebras de linhas\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\n  // if/else/for/while/try sempre tem espa\\xE7os, chaves e ocorrem em m\\xFAltiplas linhas\\n  // isso facilita a legibilidade\\n\\n  // 2.A.1.1\\n  // Exemplos de c\\xF3digo pouco claro/bagun\\xE7ado\\n\\n  if(condicao) facaAlgo();\\n\\n  while(condicao) iteracao++;\\n\\n  for(var i=0;i<100;i++) algumaIteracao();\\n\\n\\n  // 2.A.1.1\\n  // Use espa\\xE7o em branco para facilitar a leitura\\n\\n  if ( condicao ) {\\n    // instru\\xE7\\xF5es\\n  }\\n\\n  while ( condicao ) {\\n    // instru\\xE7\\xF5es\\n  }\\n\\n  for ( var i = 0; i < 100; i++ ) {\\n    // instru\\xE7\\xF5es\\n  }\\n\\n  // Melhor ainda:\\n\\n  var i,\\n    length = 100;\\n\\n  for ( i = 0; i < length; i++ ) {\\n    // instru\\xE7\\xF5es\\n  }\\n\\n  // Ou...\\n\\n  var i = 0,\\n    length = 100;\\n\\n  for ( ; i < length; i++ ) {\\n    // instru\\xE7\\xF5es\\n  }\\n\\n  var prop;\\n\\n  for ( prop in object ) {\\n    // instru\\xE7\\xF5es\\n  }\\n\\n\\n  if ( true ) {\\n    // instru\\xE7\\xF5es\\n  } else {\\n    // instru\\xE7\\xF5es\\n  }\\n\")), mdx(\"p\", null, \"  B. Atribui\\xE7\\xF5es, declara\\xE7\\xF5es, fun\\xE7\\xF5es (nomenclatura, express\\xE3o, construtor)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\n  // 2.B.1.1\\n  // Vari\\xE1veis\\n  var foo = \\\"bar\\\",\\n    num = 1,\\n    undef;\\n\\n  // Nota\\xE7\\xF5es literais:\\n  var array = [],\\n    object = {};\\n\\n\\n  // 2.B.1.2\\n  // Utilizando apenas um `var` por escopo (fun\\xE7\\xE3o) promove legibilidade\\n  // e mant\\xE9m a sua lista de declara\\xE7\\xE3o livre de desordem (al\\xE9m de evitar algumas tecladas)\\n\\n  // Ruim\\n  var foo = \\\"\\\";\\n  var bar = \\\"\\\";\\n  var qux;\\n\\n  // Bom\\n  var foo = \\\"\\\",\\n    bar = \\\"\\\",\\n    quux;\\n\\n  // ou..\\n  var // coment\\xE1rio aqui\\n  foo = \\\"\\\",\\n  bar = \\\"\\\",\\n  quux;\\n\\n\\n  // 2.B.1.3\\n  // declara\\xE7\\xF5es de vari\\xE1veis devem sempre estar no in\\xEDcio de seu respectivo escopo (fun\\xE7\\xE3o)\\n  // O mesmo deve acontecer para declara\\xE7\\xF5es de `const` e `let` do ECMAScript 6.\\n\\n  // Ruim\\n  function foo() {\\n\\n    // algumas instru\\xE7\\xF5es aqui\\n\\n    var bar = \\\"\\\",\\n      qux;\\n  }\\n\\n  // Bom\\n  function foo() {\\n    var bar = \\\"\\\",\\n      qux;\\n\\n    // algumas instru\\xE7\\xF5es depois das declara\\xE7\\xF5es de vari\\xE1veis\\n  }\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\n  // 2.B.2.1\\n  // Declara\\xE7\\xE3o de fun\\xE7\\xE3o nomeada\\n  function foo( arg1, argN ) {\\n\\n  }\\n\\n  // Utiliza\\xE7\\xE3o\\n  foo( arg1, argN );\\n\\n\\n  // 2.B.2.2\\n  // Declara\\xE7\\xE3o de fun\\xE7\\xE3o nomeada\\n  function square( number ) {\\n    return number * number;\\n  }\\n\\n  // Utiliza\\xE7\\xE3o\\n  square( 10 );\\n\\n  // Estilo de passagem artificialmente cont\\xEDnua\\n  function square( number, callback ) {\\n    callback( number * number );\\n  }\\n\\n  square( 10, function( square ) {\\n    // instru\\xE7\\xF5es de callback\\n  });\\n\\n\\n  // 2.B.2.3\\n  // Express\\xE3o de fun\\xE7\\xE3o\\n  var square = function( number ) {\\n    // Retorna algo de valor e relevante\\n    return number * number;\\n  };\\n\\n  // Express\\xE3o de fun\\xE7\\xE3o com identificador\\n  // Esse formato preferencial tem o valor adicional de permitir\\n  // chamar a si mesmo e ter uma identidade na pilha de comandos:\\n  var factorial = function factorial( number ) {\\n    if ( number < 2 ) {\\n      return 1;\\n    }\\n\\n    return number * factorial( number-1 );\\n  };\\n\\n\\n  // 2.B.2.4\\n  // Declara\\xE7\\xE3o de construtor\\n  function FooBar( options ) {\\n\\n    this.options = options;\\n  }\\n\\n  // Utiliza\\xE7\\xE3o\\n  var fooBar = new FooBar({ a: \\\"alpha\\\" });\\n\\n  fooBar.options;\\n  // { a: \\\"alpha\\\" }\\n\\n\")), mdx(\"p\", null, \"  C. Exce\\xE7\\xF5es, pequenos desvios\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\n  // 2.C.1.1\\n  // Fun\\xE7\\xF5es com callbacks\\n  foo(function() {\\n    // Veja que n\\xE3o h\\xE1 espa\\xE7o extra entre os par\\xEAnteses\\n    // da chamada de fun\\xE7\\xE3o e a palavra \\\"function\\\"\\n  });\\n\\n  // Fun\\xE7\\xE3o recebendo uma array, sem espa\\xE7o\\n  foo([ \\\"alpha\\\", \\\"beta\\\" ]);\\n\\n  // 2.C.1.2\\n  // Fun\\xE7\\xE3o recebendo um objeto, sem espa\\xE7o\\n  foo({\\n    a: \\\"alpha\\\",\\n    b: \\\"beta\\\"\\n  });\\n\\n  // String literal como argumento \\xFAnico, sem espa\\xE7o\\n  foo(\\\"bar\\\");\\n\\n  // Par\\xEAnteses internos de agrupamento, sem espa\\xE7o\\n  if ( !(\\\"foo\\\" in obj) ) {\\n\\n  }\\n\\n\")), mdx(\"p\", null, \"  D. Consist\\xEAncia sempre ganha\"), mdx(\"p\", null, \"  Nas se\\xE7\\xF5es 2.A-2.C, as regras de espa\\xE7o em branco s\\xE3o recomendadas sob um prop\\xF3sito simples e maior: consist\\xEAncia.\\n\\xC9 importante notar que prefer\\xEAncias de formata\\xE7\\xE3o, tais como \\\"espa\\xE7o em branco interno\\\" deve ser considerado opcional, mas apenas um estilo deve existir por toda a fonte de seu projeto.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\n  // 2.D.1.1\\n\\n  if (condition) {\\n    // instru\\xE7\\xF5es\\n  }\\n\\n  while (condition) {\\n    // instru\\xE7\\xF5es\\n  }\\n\\n  for (var i = 0; i < 100; i++) {\\n    // instru\\xE7\\xF5es\\n  }\\n\\n  if (true) {\\n    // instru\\xE7\\xF5es\\n  } else {\\n    // instru\\xE7\\xF5es\\n  }\\n\\n\")), mdx(\"p\", null, \"  E. Aspas\"), mdx(\"p\", null, \"  Se voc\\xEA preferir usar simples ou dupla n\\xE3o importa, n\\xE3o h\\xE1 diferen\\xE7a em como o JavaScript analisa elas. O que \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ABSOLUTAMENTE PRECISA\"), \" ser aplicado \\xE9 consist\\xEAncia. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Nunca misture diferentes tipos de aspas em um mesmo projeto. Escolha um estilo e fique com ele.\")), mdx(\"p\", null, \"  F. Finais de linha e linhas vazias\"), mdx(\"p\", null, \"  Espa\\xE7os em branco podem arruinar diffs e fazer com que \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"changesets\"), \" sejam imposs\\xEDveis de se ler. Considere incorporar um gancho de pre-commit que remova espa\\xE7os em branco ao final das linhas e espa\\xE7os em branco em linhas vazias automaticamente.\"), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    name: \"type\"\n  }, \"Checagem de escrita (cortesia das Recomenda\\xE7\\xF5es de Estilo do N\\xFAcleo do jQuery)\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"A. Tipos existentes\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"String:\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"      typeof variavel === \\\"string\\\"\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Number:\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"      typeof variavel === \\\"number\\\"\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Boolean:\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"      typeof variavel === \\\"boolean\\\"\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Object:\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"      typeof variavel === \\\"object\\\"\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Array:\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"      Array.isArray( variavel )\\n      // (quando poss\\xEDvel)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"null:\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"      variavel === null\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"null ou undefined:\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"      variavel == null\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"undefined:\\n\\n  Vari\\xE1veis Globais:\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"        typeof variavel === \\\"undefined\\\"\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"  Vari\\xE1veis Locais:\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"        variavel === undefined\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"  Propriedades:\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"        object.prop === undefined\\n        object.hasOwnProperty( prop )\\n        \\\"prop\\\" in object\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"B. Tipos coagidos\\n\\nConsidere as implica\\xE7\\xF5es do seguinte...\\n\\nDado este HTML:\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"\\n    <input type=\\\"text\\\" id=\\\"foo-input\\\" value=\\\"1\\\">\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\n    // 3.B.1.1\\n\\n    // `foo` foi declarado com o valor `0` e seu tipo \\xE9 `number`\\n    var foo = 0;\\n\\n    // typeof foo;\\n    // \\\"number\\\"\\n    ...\\n\\n    // Algum momento depois no seu c\\xF3digo, voc\\xEA precisa atualizar `foo`\\n    // com um novo valor derivado de um elemento `input`\\n\\n    foo = document.getElementById(\\\"foo-input\\\").value;\\n\\n    // Se voc\\xEA testasse `typeof foo` agora, o resultado seria uma `string`\\n    // Isso significa que se tivesse uma l\\xF3gica que testasse `foo` como:\\n\\n    if ( foo === 1 ) {\\n\\n      importantTask();\\n\\n    }\\n\\n    // `importantTask()` nunca seria chamado, mesmo que `foo` tivesse um valor \\\"1\\\"\\n\\n\\n    // 3.B.1.2\\n\\n    // Voc\\xEA pode prevenir problemas utilizando uma coer\\xE7\\xE3o autom\\xE1tica com os operadores + ou -:\\n\\n    foo = +document.getElementById(\\\"foo-input\\\").value;\\n    //    ^ o operador + ir\\xE1 converter o operando do lado direito para um n\\xFAmero\\n\\n    // typeof foo;\\n    // \\\"number\\\"\\n\\n    if ( foo === 1 ) {\\n\\n      importantTask();\\n\\n    }\\n\\n    // `importantTask()` ser\\xE1 chamado\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Aqui temos alguns casos comuns com coer\\xE7\\xF5es:\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\n    // 3.B.2.1\\n\\n    var number = 1,\\n      string = \\\"1\\\",\\n      bool = false;\\n\\n    number;\\n    // 1\\n\\n    number + \\\"\\\";\\n    // \\\"1\\\"\\n\\n    string;\\n    // \\\"1\\\"\\n\\n    +string;\\n    // 1\\n\\n    +string++;\\n    // 1\\n\\n    string;\\n    // 2\\n\\n    bool;\\n    // false\\n\\n    +bool;\\n    // 0\\n\\n    bool + \\\"\\\";\\n    // \\\"false\\\"\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"    // 3.B.2.2\\n\\n    var number = 1,\\n      string = \\\"1\\\",\\n      bool = true;\\n\\n    string === number;\\n    // false\\n\\n    string === number + \\\"\\\";\\n    // true\\n\\n    +string === number;\\n    // true\\n\\n    bool === number;\\n    // false\\n\\n    +bool === number;\\n    // true\\n\\n    bool === string;\\n    // false\\n\\n    bool === !!string;\\n    // true\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"    // 3.B.2.3\\n\\n    var array = [ \\\"a\\\", \\\"b\\\", \\\"c\\\" ];\\n\\n    !!~array.indexOf( \\\"a\\\" );\\n    // true\\n\\n    !!~array.indexOf( \\\"b\\\" );\\n    // true\\n\\n    !!~array.indexOf( \\\"c\\\" );\\n    // true\\n\\n    !!~array.indexOf( \\\"d\\\" );\\n    // false\\n\\n    // Note que o que est\\xE1 acima deve ser considerado\\n    // \\\"desnecessariamente inteligente\\\".\\n    // Prefira a aproxima\\xE7\\xE3o \\xF3bvia de comparar o valor retornado do\\n    // indexOf, como por exemplo:\\n\\n    if ( array.indexOf( \\\"a\\\" ) >= 0 ) {\\n      // ...\\n    }\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"    // 3.B.2.3\\n\\n    var num = 2.5;\\n\\n    parseInt( num, 10 );\\n\\n    // \\xE9 o mesmo que...\\n\\n    ~~num;\\n\\n    num >> 0;\\n    num >>> 0;\\n\\n    // Todos resultam em 2\\n\\n\\n    // De qualquer forma, lembre-se que n\\xFAmeros negativos s\\xE3o tratados\\n    // de forma diferente...\\n\\n    var neg = -2.5;\\n\\n    parseInt( neg, 10 );\\n\\n    // \\xE9 o mesmo que...\\n\\n    ~~neg;\\n\\n    neg >> 0;\\n\\n    // Resulta em -2\\n    // Por\\xE9m...\\n\\n    neg >>> 0;\\n\\n    // Vai resultar em 4294967294\\n\\n\\n\\n\\n\")), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    name: \"cond\"\n  }, \"Avalia\\xE7\\xE3o condicional\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\n  // 4.1.1\\n  // Quando estiver apenas avaliando se um array tem tamanho,\\n  // ao inv\\xE9s disso:\\n  if ( array.length > 0 ) ...\\n\\n  // ...avalie a verdade l\\xF3gica, como isso:\\n  if ( array.length ) ...\\n\\n\\n  // 4.1.2\\n  // Quando estiver apenas avaliando se um array est\\xE1 vazio,\\n  // ao inv\\xE9s disso:\\n  if ( array.length === 0 ) ...\\n\\n  // ...avalie a verdade l\\xF3gica, como isso:\\n  if ( !array.length ) ...\\n\\n\\n  // 4.1.3\\n  // Quando estiver apenas avaliando se uma string n\\xE3o est\\xE1 vazia,\\n  // ao inv\\xE9s disso:\\n  if ( string !== \\\"\\\" ) ...\\n\\n  // ...avalie a verdade l\\xF3gica, como isso:\\n  if ( string ) ...\\n\\n\\n  // 4.1.4\\n  // Quando estiver apenas avaliando se uma string est\\xE1 vazia,\\n  // ao inv\\xE9s disso:\\n  if ( string === \\\"\\\" ) ...\\n\\n  // ...avalie se ela \\xE9 logicamente falsa, como isso:\\n  if ( !string ) ...\\n\\n\\n  // 4.1.5\\n  // Quando estiver avaliando se uma refer\\xEAncia \\xE9 verdadeira,\\n  // ao inv\\xE9s disso:\\n  if ( foo === true ) ...\\n\\n  // ...avalie como se quisesse isso, use a vantagem de suas capacidades primitivas:\\n  if ( foo ) ...\\n\\n\\n  // 4.1.6\\n  // Quando estiver avaliando se uma refer\\xEAncia \\xE9 falsa,\\n  // ao inv\\xE9s disso:\\n  if ( foo === false ) ...\\n\\n  // ...use a nega\\xE7\\xE3o para coagir para uma avalia\\xE7\\xE3o verdadeira\\n  if ( !foo ) ...\\n\\n  // ...Seja cuidadoso, isso tamb\\xE9m ir\\xE1 funcionar com: 0, \\\"\\\", null, undefined, NaN\\n  // Se voc\\xEA _PRECISA_ testar um valor falso de tipo booleano, ent\\xE3o use\\n  if ( foo === false ) ...\\n\\n\\n  // 4.1.7\\n  // Quando apenas estiver avaliando uma refer\\xEAncia que pode ser `null` ou `undefined`, mas N\\xC3O `false`, \\\"\\\" ou 0,\\n  // ao inv\\xE9s disso:\\n  if ( foo === null || foo === undefined ) ...\\n\\n  // ...aproveite a vantagem da coer\\xE7\\xE3o de tipo com ==, como isso:\\n  if ( foo == null ) ...\\n\\n  // Lembre-se, utilizando == ir\\xE1 funcionar em um `null` TANTO para `null` quanto para `undefined`\\n  // mas n\\xE3o para `false`, \\\"\\\" ou 0\\n  null == undefined\\n\\n\")), mdx(\"p\", null, \"  SEMPRE avalie para o melhor e mais preciso resultado - o que est\\xE1 acima \\xE9 uma recomenda\\xE7\\xE3o, n\\xE3o um dogma.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\n  // 4.2.1\\n  // Coer\\xE7\\xE3o de tipo e notas sobre avalia\\xE7\\xF5es\\n\\n  Prefira `===` ao inv\\xE9s de  `==` (ao menos em casos que necessitem avalia\\xE7\\xE3o de tipos flex\\xEDveis)\\n\\n  === n\\xE3o faz coer\\xE7\\xE3o de tipo, o que significa que:\\n\\n  \\\"1\\\" === 1;\\n  // false\\n\\n  == faz coer\\xE7\\xE3o de tipo, o que significa que:\\n\\n  \\\"1\\\" == 1;\\n  // true\\n\\n\\n  // 4.2.2\\n  // Booleanos, verdades e nega\\xE7\\xF5es\\n\\n  // Booleanos:\\n  true, false\\n\\n  // Verdades:\\n  \\\"foo\\\", 1\\n\\n  // Nega\\xE7\\xF5es:\\n  \\\"\\\", 0, null, undefined, NaN, void 0\\n\\n\")), mdx(\"ol\", {\n    \"start\": 5\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    name: \"practical\"\n  }, \"Estilo Pr\\xE1tico\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\n  // 5.1.1\\n  // Um m\\xF3dulo pr\\xE1tico\\n\\n  (function( global ) {\\n    var Module = (function() {\\n\\n      var data = \\\"segredo\\\";\\n\\n      return {\\n        // Essa \\xE9 uma propriedade booleana\\n        bool: true,\\n        // Algum valor de string\\n        string: \\\"uma string\\\",\\n        // Uma propriedade em array\\n        array: [ 1, 2, 3, 4 ],\\n        // Uma propriedade em objeto\\n        object: {\\n          lang: \\\"pt-BR\\\"\\n        },\\n        getData: function() {\\n          // pega o valor atual de `data`\\n          return data;\\n        },\\n        setData: function( value ) {\\n          // atribui o valor a data que \\xE9 retornado\\n          return ( data = value );\\n        }\\n      };\\n    })();\\n\\n    // Outras coisas que tamb\\xE9m podem acontecer aqui\\n\\n    // Expor seu m\\xF3dulo ao objeto global\\n    global.Module = Module;\\n\\n  })( this );\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\n  // 5.2.1\\n  // Um construtor pr\\xE1tico\\n\\n  (function( global ) {\\n\\n    function Ctor( foo ) {\\n\\n      this.foo = foo;\\n\\n      return this;\\n    }\\n\\n    Ctor.prototype.getFoo = function() {\\n      return this.foo;\\n    };\\n\\n    Ctor.prototype.setFoo = function( val ) {\\n      return ( this.foo = val );\\n    };\\n\\n\\n    // Para chamar um construtor sem o `new`, voc\\xEA pode fazer assim:\\n    var ctor = function( foo ) {\\n      return new Ctor( foo );\\n    };\\n\\n\\n    // exponha nosso construtor ao objeto global\\n    global.ctor = ctor;\\n\\n  })( this );\\n\\n\")), mdx(\"ol\", {\n    \"start\": 6\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    name: \"naming\"\n  }, \"Nomenclatura\"))), mdx(\"p\", null, \"  A. Se voc\\xEA n\\xE3o \\xE9 um compilador humano ou compactador de c\\xF3digo, n\\xE3o tente ser um.\"), mdx(\"p\", null, \"  O c\\xF3digo a seguir \\xE9 um exemplo de nomenclatura ruim:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\n  // 6.A.1.1\\n  // Exemplo de c\\xF3digo com nomenclaturas fracas\\n\\n  function q(s) {\\n    return document.querySelectorAll(s);\\n  }\\n  var i,a=[],els=q(\\\"#foo\\\");\\n  for(i=0;i<els.length;i++){a.push(els[i]);}\\n\")), mdx(\"p\", null, \"  Sem d\\xFAvida, voc\\xEA j\\xE1 deve ter escrito c\\xF3digo assim - provavelmente isso acaba hoje.\"), mdx(\"p\", null, \"  Aqui temos o mesmo trecho l\\xF3gico, por\\xE9m com uma nomenclatura simp\\xE1tica e mais inteligente (e uma estrutura leg\\xEDvel):\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\n  // 6.A.2.1\\n  // Exemplo de c\\xF3digo com nomenclatura melhorada\\n\\n  function query( selector ) {\\n    return document.querySelectorAll( selector );\\n  }\\n\\n  var idx = 0,\\n    elements = [],\\n    matches = query(\\\"#foo\\\"),\\n    length = matches.length;\\n\\n  for( ; idx < length; idx++ ){\\n    elements.push( matches[ idx ] );\\n  }\\n\\n\")), mdx(\"p\", null, \"  Algumas indica\\xE7\\xF5es adicionais de nomenclaturas\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\n  // 6.A.3.1\\n  // Nomes de strings\\n\\n  `dog` \\xE9 uma string\\n\\n  // 6.A.3.2\\n  // Nomes de arrays\\n\\n  `dogs` \\xE9 uma array de strings `dog`\\n\\n\\n  // 6.A.3.3\\n  // Nomes de fun\\xE7\\xF5es, objetos, instancias, etc\\n\\n  // fun\\xE7\\xF5es e declara\\xE7\\xF5es de vari\\xE1veis\\n  camelCase;\\n\\n\\n  // 6.A.3.4\\n  // Nomes de construtores, prot\\xF3tipos, etc\\n\\n  // fun\\xE7\\xE3o construtora\\n  PascalCase;\\n\\n\\n  // 6.A.3.5\\n  // Nomes de express\\xF5es regulares\\n\\n  rDesc = //;\\n\\n\\n  // 6.A.3.6\\n  // Do Guia de Estilos da Biblioteca do Google Closure\\n\\n  funcoesNomeadasAssim;\\n  variaveisNomeadasAssim;\\n  ConstrutoresNomeadosAssim;\\n  EnumNomeadosAssim;\\n  metodosNomeadosAssim;\\n  CONSTANTES_SIMBOLICAS_ASSIM;\\n\\n  // nota da tradu\\xE7\\xE3o: n\\xE3o havia tradu\\xE7\\xE3o no Google Closure, o original \\xE9 o seguinte:\\n\\n  functionNamesLikeThis;\\n  variableNamesLikeThis;\\n  ConstructorNamesLikeThis;\\n  EnumNamesLikeThis;\\n  methodNamesLikeThis;\\n  SYMBOLIC_CONSTANTS_LIKE_THIS;\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"B. Faces do `this`\\n\\nAl\\xE9m dos mais conhecidos casos de uso do `call` e `apply`, sempre prefira `.bind( this )` ou um equivalente funcional, para criar defini\\xE7\\xF5es `BoundFunction` que possam ser invocadas posteriormente. Somente recorra ao aliasing quando n\\xE3o houver dispon\\xEDvel uma outra op\\xE7\\xE3o preferencial.\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\n    // 6.B.1\\n    function Device( opts ) {\\n\\n      this.value = null;\\n\\n      // abre um stream ass\\xEDncrono,\\n      // isso ser\\xE1 chamado continuamente\\n      stream.read( opts.path, function( data ) {\\n\\n        // Atualiza o valor atual dessa instancia\\n        // com o valor mais recente do\\n        // data stream\\n        this.value = data;\\n\\n      }.bind(this) );\\n\\n      // Suprime a frequencia de eventos emitidos por\\n      // essa instancia de Device\\n      setInterval(function() {\\n\\n        // Emite um evento suprimido\\n        this.emit(\\\"event\\\");\\n\\n      }.bind(this), opts.freq || 100 );\\n    }\\n\\n    // Apenas suponha que n\\xF3s temos herdado um EventEmitter ;)\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Quando n\\xE3o dispon\\xEDvel, equivalentes funcionais ao `.bind` existem em muitas bibliotecas JavaScript modernas.\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"    // 6.B.2\\n\\n    // ex.: lodash/underscore, _.bind()\\n    function Device( opts ) {\\n\\n      this.value = null;\\n\\n      stream.read( opts.path, _.bind(function( data ) {\\n\\n        this.value = data;\\n\\n      }, this) );\\n\\n      setInterval(_.bind(function() {\\n\\n        this.emit(\\\"event\\\");\\n\\n      }, this), opts.freq || 100 );\\n    }\\n\\n    // ex.: jQuery.proxy\\n    function Device( opts ) {\\n\\n      this.value = null;\\n\\n      stream.read( opts.path, jQuery.proxy(function( data ) {\\n\\n        this.value = data;\\n\\n      }, this) );\\n\\n      setInterval( jQuery.proxy(function() {\\n\\n        this.emit(\\\"event\\\");\\n\\n      }, this), opts.freq || 100 );\\n    }\\n\\n    // ex.: dojo.hitch\\n    function Device( opts ) {\\n\\n      this.value = null;\\n\\n      stream.read( opts.path, dojo.hitch( this, function( data ) {\\n\\n        this.value = data;\\n\\n      }) );\\n\\n      setInterval( dojo.hitch( this, function() {\\n\\n        this.emit(\\\"event\\\");\\n\\n      }), opts.freq || 100 );\\n    }\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Como \\xFAltimo recurso, crie uma refer\\xEAncia ao `this` utilizando `self` como identificador. Isso \\xE9 bastante propenso a bugs e deve ser evitado sempre que poss\\xEDvel.\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\n    // 6.B.3\\n\\n    function Device( opts ) {\\n      var self = this;\\n\\n      this.value = null;\\n\\n      stream.read( opts.path, function( data ) {\\n\\n        self.value = data;\\n\\n      });\\n\\n      setInterval(function() {\\n\\n        self.emit(\\\"event\\\");\\n\\n      }, opts.freq || 100 );\\n    }\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"C. Utilize `thisArg`\\n\\nV\\xE1rios metodos de prototipagem internos do ES 5.1 vem com a assinatura especial de 'thisArg', que deve ser utilizada quando for poss\\xEDvel.\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\n    // 6.C.1\\n\\n    var obj;\\n\\n    obj = { f: \\\"foo\\\", b: \\\"bar\\\", q: \\\"qux\\\" };\\n\\n    Object.keys( obj ).forEach(function( key ) {\\n\\n      // |this| agora se refere a `obj`\\n\\n      console.log( this[ key ] );\\n\\n    }, obj ); // <-- o \\xFAltimo argumento \\xE9 `thisArg`\\n\\n    // Prints...\\n\\n    // \\\"foo\\\"\\n    // \\\"bar\\\"\\n    // \\\"qux\\\"\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"`thisArg` pode ser utilizado com `Array.prototype.every`, `Array.prototype.forEach`, `Array.prototype.some`, `Array.prototype.map`, `Array.prototype.filter`\\n\")), mdx(\"ol\", {\n    \"start\": 7\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    name: \"misc\"\n  }, \"Miscel\\xE2nea\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Esta se\\xE7\\xE3o deve servir para ilustrar id\\xE9ias e conceitos sobre como n\\xE3o se considerar isso como um dogma, mas ao inv\\xE9s disso deve encorajar o questionamento de pr\\xE1ticas na tentativa de encontrar formas melhores para executar tarefas comuns na programa\\xE7\\xE3o em JavaScript.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"A. Evite utilizar \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"switch\"), \", m\\xE9todos modernos de verifica\\xE7\\xE3o dever\\xE3o adicionar fun\\xE7\\xF5es com \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"switch\"), \" em suas listas negras\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Parecem haver melhorias dr\\xE1sticas \\xE0 execu\\xE7\\xE3o do comando \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"switch\"), \" nas \\xFAltimas vers\\xF5es do Firefox e do Chrome:\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://jsperf.com/switch-vs-object-literal-vs-module\"\n  }), \"http://jsperf.com/switch-vs-object-literal-vs-module\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Melhorias not\\xE1veis podem ser observadas aqui tamb\\xE9m:\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/rwldrn/idiomatic.js/issues/13\"\n  }), \"https://github.com/rwldrn/idiomatic.js/issues/13\")))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\n  // 7.A.1.1\\n  // Um exemplo de uma instru\\xE7\\xE3o switch\\n\\n  switch( foo ) {\\n    case \\\"alpha\\\":\\n      alpha();\\n      break;\\n    case \\\"beta\\\":\\n      beta();\\n      break;\\n    default:\\n      // algo para executar por padr\\xE3o\\n      break;\\n  }\\n\\n  // 7.A.1.2\\n  // Uma maneira alternativa de dar suporte para facilidade de composi\\xE7\\xE3o e\\n  // reutiiliza\\xE7\\xE3o \\xE9 utilizar um objeto que guarde \\\"cases\\\" e uma fun\\xE7\\xE3o\\n  // para delegar:\\n\\n  var cases, delegator;\\n\\n  // Retornos de exemplo apenas para ilustra\\xE7\\xE3o.\\n  cases = {\\n    alpha: function() {\\n      // instru\\xE7\\xF5es\\n      // um retorno\\n      return [ \\\"Alpha\\\", arguments.length ];\\n    },\\n    beta: function() {\\n      // instru\\xE7\\xF5es\\n      // um retorno\\n      return [ \\\"Beta\\\", arguments.length ];\\n    },\\n    _default: function() {\\n      // instru\\xE7\\xF5es\\n      // um retorno\\n      return [ \\\"Default\\\", arguments.length ];\\n    }\\n  };\\n\\n  delegator = function() {\\n    var args, key, delegate;\\n\\n    // Transforma a lista de argumentos em uma array\\n    args = [].slice.call( arguments );\\n\\n    // Retira a chave inicial dos argumentos\\n    key = args.shift();\\n\\n    // Atribui o manipulador de caso padr\\xE3o\\n    delegate = cases._default;\\n\\n    // Deriva o m\\xE9todo para delegar a opera\\xE7\\xE3o para\\n    if ( cases.hasOwnProperty( key ) ) {\\n      delegate = cases[ key ];\\n    }\\n\\n    // O argumento de escopo pode ser definido para algo espec\\xEDfico\\n    // nesse caso, |null| ser\\xE1 suficiente\\n    return delegate.apply( null, args );\\n  };\\n\\n  // 7.A.1.3\\n  // Coloque a API do 7.A.1.2 para funcionar:\\n\\n  delegator( \\\"alpha\\\", 1, 2, 3, 4, 5 );\\n  // [ \\\"Alpha\\\", 5 ]\\n\\n  // Claro que a argumento de chave inicial pode ser facilmente baseada\\n  // em alguma outra condi\\xE7\\xE3o arbitr\\xE1ria.\\n\\n  var caseKey, someUserInput;\\n\\n  // Possivelmente alguma maneira de entrada de formul\\xE1rio?\\n  someUserInput = 9;\\n\\n  if ( someUserInput > 10 ) {\\n    caseKey = \\\"alpha\\\";\\n  } else {\\n    caseKey = \\\"beta\\\";\\n  }\\n\\n  // ou...\\n\\n  caseKey = someUserInput > 10 ? \\\"alpha\\\" : \\\"beta\\\";\\n\\n  // E assim...\\n\\n  delegator( caseKey, someUserInput );\\n  // [ \\\"Beta\\\", 1 ]\\n\\n  // E claro...\\n\\n  delegator();\\n  // [ \\\"Default\\\", 0 ]\\n\\n\\n\")), mdx(\"p\", null, \"  B. Retornos antecipados promovem legibilidade de c\\xF3digo com m\\xEDnima diferen\\xE7a de performance\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"\\n  // 7.B.1.1\\n  // Ruim:\\n  function returnLate( foo ) {\\n    var ret;\\n\\n    if ( foo ) {\\n      ret = \\\"foo\\\";\\n    } else {\\n      ret = \\\"quux\\\";\\n    }\\n    return ret;\\n  }\\n\\n  // Bom:\\n\\n  function returnEarly( foo ) {\\n\\n    if ( foo ) {\\n      return \\\"foo\\\";\\n    }\\n    return \\\"quux\\\";\\n  }\\n\\n\")), mdx(\"ol\", {\n    \"start\": 8\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    name: \"native\"\n  }, \"Objetos nativos e hospedados\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"O princ\\xEDpio b\\xE1sico aqui \\xE9:\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"N\\xE3o fa\\xE7a coisas est\\xFApidas e tudo vai ficar bem.\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Para refor\\xE7ar esse conceito, por favor, assista essa apresenta\\xE7\\xE3o:\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u201CEverything is Permitted: Extending Built-ins\\u201D por Andrew Dupont (JSConf2011, Portland, Oregon)\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"iframe\", _extends({\n    parentName: \"p\"\n  }, {\n    \"width\": \"100%\",\n    \"height\": 315,\n    \"src\": \"https://www.youtube-nocookie.com/embed/xL3xCO7CLNM?rel=0\",\n    \"frameBorder\": \"0\",\n    \"allow\": \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    \"allowFullScreen\": true\n  }))))), mdx(\"ol\", {\n    \"start\": 9\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    name: \"comments\"\n  }, \"Coment\\xE1rios\"))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Uma linha \\xFAnica acima do c\\xF3digo que \\xE9 comentado\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Multiplas linhas \\xE9 bom\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Coment\\xE1rios ao final da linha s\\xE3o proibidos!\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"O estilo do JSDoc \\xE9 bom, por\\xE9m requer um investimento de tempo significante\")), mdx(\"ol\", {\n    \"start\": 10\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    name: \"language\"\n  }, \"C\\xF3digo em apenas um idioma\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Programas devem ser escritos em um \\xFAnico idioma, n\\xE3o importe o idioma que seja, a ser definido por quem o mant\\xE9m.\"))), mdx(\"h2\", null, \"Ap\\xEAndice\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"V\\xEDrgula inicial.\")), mdx(\"p\", null, \"Qualquer projeto que cite este documento como seu guia base de estilo n\\xE3o aceitar\\xE1 formata\\xE7\\xE3o de c\\xF3digo com v\\xEDrgula inicial, a n\\xE3o ser que isso seja explicitamente especificado de outra forma pelo autor do projeto.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#princípios-para-escrever-javascript-de-forma-consistente-e-idiomática","title":"Princípios para Escrever JavaScript de forma Consistente e Idiomática","items":[{"url":"#referências-originais","title":"Referências Originais"},{"url":"#todo-código-em-qualquer-aplicação-deve-parecer-como-se-tivesse-sido-escrito-por-uma-única-pessoa-independentemente-de-quantas-pessoas-tenham-contribuído","title":"Todo código em qualquer aplicação deve parecer como se tivesse sido escrito por uma única pessoa, independentemente de quantas pessoas tenham contribuído."},{"url":"#conteúdo-importante-e-não-idiomático","title":"Conteúdo importante e não idiomático:"},{"url":"#fique-ligado","title":"Fique ligado"},{"url":"#índice","title":"Índice"},{"url":"#prefácio","title":"Prefácio"},{"url":"#manifesto-de-estilo-idiomático","title":"Manifesto de estilo idiomático"},{"url":"#apêndice","title":"Apêndice"}]}]},"parent":{"__typename":"File","id":"668956f7-73a6-5b55-beed-37239b807a87","relativePath":"javascript/idiomatic-js.md"},"frontmatter":{"metaTitle":"Princípios para Escrever JavaScript de forma Consistente e Idiomática","metaDescription":"Princípios para Escrever JavaScript de forma Consistente e Idiomática"}},"allMdx":{"edges":[{"node":{"id":"6b27bc12-bb81-5124-8b51-f70c283344a5","fields":{"slug":"/backend","title":"Back-end: Guia de estudos"}}},{"node":{"id":"e985dfcf-d448-5bf6-934b-fe2f7c86d732","fields":{"slug":"/articles","title":"Artigos Originais"}}},{"node":{"id":"2ab1dda2-a787-5684-b0e1-bb6c9017cd8b","fields":{"slug":"/css","title":"CSS"}}},{"node":{"id":"d9b206ac-dbe9-5c8c-a8c1-d802143c7f2f","fields":{"slug":"/devops","title":"Dev-ops: Guia de estudos"}}},{"node":{"id":"a3d209ba-1fb1-5b18-89ba-2927ed6ded51","fields":{"slug":"/git","title":"GIT"}}},{"node":{"id":"95318330-364f-5450-be1c-41ce2e970292","fields":{"slug":"/frontend","title":"Front-end: Guia de estudos"}}},{"node":{"id":"e857beb9-5d6a-597a-93da-293b0945daa5","fields":{"slug":"/html","title":"HTML"}}},{"node":{"id":"c7ef78ad-d567-59b1-8512-2a8b91bdbcb9","fields":{"slug":"/","title":"Reativa Tecnologia - Plataforma"}}},{"node":{"id":"d376f4ab-0540-59dd-a40c-2fdc8e2d559e","fields":{"slug":"/introduction","title":"Introdução"}}},{"node":{"id":"aa3ca2ca-a148-55d8-a8dc-168e08169631","fields":{"slug":"/javascript","title":"Javascript"}}},{"node":{"id":"ea0d2131-26e2-53c7-b48d-bb4475cb725d","fields":{"slug":"/radar","title":"Radar de Tecnologias"}}},{"node":{"id":"ec9854e8-f208-52b3-b115-239e5ffcca70","fields":{"slug":"/articles/1_faculdade","title":"Faculdade de TI é perda de tempo"}}},{"node":{"id":"147bfc38-1a7c-56a2-acf0-3777d79f1794","fields":{"slug":"/articles/como-fazer-as-empresas-sairem-no-tapa","title":"Como fazer as empresas saírem no tapa por você"}}},{"node":{"id":"62759732-4b77-5ca7-be1c-4b050c5fd054","fields":{"slug":"/articles/como-manter-um-dev-rotatitividade","title":"Como manter um dev na sua empresa e evitar rotatividade"}}},{"node":{"id":"a0dbc83b-673e-5cba-a051-081d782710e2","fields":{"slug":"/articles/melhores-empresas-para-nao-trabalhar","title":"Melhores empresas para não se trabalhar"}}},{"node":{"id":"dc9725e8-b1fc-5dac-9199-0566d49d928e","fields":{"slug":"/javascript/eloquent-js","title":"Livro completo de Javascript"}}},{"node":{"id":"1ef3e34a-e6a0-555f-8966-621deebfd45b","fields":{"slug":"/articles/startups-ou-tradicionais","title":"Startups ou empresas grandes tradicionais? Qual é a melhor para se trabalhar?"}}},{"node":{"id":"786e50f3-505c-532c-856e-d978effab9df","fields":{"slug":"/javascript/idiomatic-js","title":"Idiomatic JS"}}},{"node":{"id":"2d079d17-00ef-5b20-9643-0d7e05c622a5","fields":{"slug":"/javascript/js-best-practices","title":"Javascript clean code"}}},{"node":{"id":"6c009ed6-ae0c-5956-a662-341a7da6ca74","fields":{"slug":"/javascript/js-interview","title":"17 perguntas de Javascript para entrevistas"}}},{"node":{"id":"a795f54b-6ed5-57b2-8e56-6029e2b9f65a","fields":{"slug":"/deno","title":"Deno"}}},{"node":{"id":"a0be7563-5fab-5194-ae0e-bbc7eaaf8e62","fields":{"slug":"/deno/1_deno","title":"O que é o Deno?"}}},{"node":{"id":"ecc51cdc-736e-59b1-aa3c-b90114080c5a","fields":{"slug":"/deno/2_porque_usar_deno","title":"Deno vai substituir o Node?"}}},{"node":{"id":"e885ecda-b288-5779-b707-71ee6d722fa6","fields":{"slug":"/deno/3_devo_aprender_deno","title":"Devo estudar Deno?"}}},{"node":{"id":"e2646799-9abd-5262-92cc-dbfd7245a2e7","fields":{"slug":"/deno/4_como_instalar_deno","title":"Como instalar o Deno?"}}},{"node":{"id":"8411a3a9-32de-5b9e-a274-c43ac5ebc480","fields":{"slug":"/javascript/5_js_examples","title":"Exemplos de códigos em Javascript"}}}]}},"pageContext":{"id":"786e50f3-505c-532c-856e-d978effab9df"}}}